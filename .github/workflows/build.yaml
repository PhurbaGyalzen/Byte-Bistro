name: Build Flutter App

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # parallely build apk on ubuntu, ipa on macos and windows on windows
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./byte_bistro
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2


      - name: Setup stable flutter env (*nix)
        if: ${{ runner.os != 'Windows' }}
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'
          channel: 'stable'

      - name: Setup beta flutter env (Windows)
        if: ${{ runner.os == 'Windows' }}
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'
          channel: 'beta'

      - name: Create empty .env file
        run: touch .env

      - name: Install Dependencies
        run: flutter pub get

      # - name: Static analysis.
      #   run: flutter analyze .

      # - name: Run tests
      #   run: flutter test

      - name: Create splash screen
        run: flutter pub run flutter_native_splash:create

      - name: Build apk
        if: ${{ runner.os == 'Linux' }}
        run: flutter build apk

      - name: Build iOS App
        if: ${{ runner.os == 'macOS' }}
        run: |
            flutter build ios --no-codesign
            cd build/ios/iphoneos
            mkdir Payload
            cd Payload
            ln -s ../Runner.app
            cd ..
            zip -r app.ipa Payload
      - name: Build windows app and zip it.
        if: ${{ runner.os == 'Windows' }}
        run: |
            flutter config --enable-windows-desktop
            flutter build windows
            cd build/windows/runner
            tar -a -c -f windows_executable.zip Release
      
      - name: Upload APK
        if: ${{ runner.os == 'Linux' }}
        uses: actions/upload-artifact@v2
        with:
          name: bins
          path: build/app/outputs/apk/release/*.apk

      - name: Upload IPA
        if: ${{ runner.os == 'macOS' }}
        uses: actions/upload-artifact@v2
        with:
          name: bins
          path: build/ios/iphoneos/app.ipa
      
      - name: Upload windows executable bundle
        if: ${{ runner.os == 'Windows' }}
        uses: actions/upload-artifact@v2
        with:
          name: bins
          path: build/windows/runner/windows_executable.zip
                

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        id: downID
        with:
          name: bins
          path: build # download to ./build/

      - name: Echo download path
        run: ls build/ -aFR

      - name: Push artificats to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/*"
          token: ${{ secrets.GITHUB_TOKEN }}

